1.
public class ExceptionHandlingExample 
{

    public static void main(String[] args)
{
        try 
{
int result = divideNumbers(10, 0);
            System.out.println("Result of division: " + result);
        }
catch (ArithmeticException e)
{
            System.out.println("Error: Division by zero is not allowed.");
        } 
finally 
{
            System.out.println("End of program.");
        }
    }

    public static int divideNumbers(int dividend, int divisor) 
{
        return dividend / divisor;
    }
}

2.
class InvalidAgeException extends Exception 
{
    public InvalidAgeException(String message) 
    {
        super(message);
    }
}
public class CustomExceptionExample 
{
    public static void main(String[] args) 
    {
        try
        {
            checkAge(15);
            System.out.println("Age verified successfully.");
        } catch (InvalidAgeException e) 
        {
     System.out.println("Invalid Age: " + e.getMessage());
        }
    }

    public static void checkAge(int age) throws InvalidAgeException
    {
       
        if (age < 18)
        {
            throw new InvalidAgeException("Age must be 18 or above.");
        }
    }
}

3.
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

public class FileHandlingExample 
{

    public static void main(String[] args) 
    {
        File file = new File("nonexistentfile.txt");
        try
        {
            FileReader reader = new FileReader(file);
            System.out.println("File exists and can be read.");
            reader.close();
        } 
        catch (IOException e) 
        {
          System.out.println("Error: File not found or cannot be read.");
        } finally {
            System.out.println("End of program.");
        }
    }
}
